{"version":3,"sources":["Components/Currency.js","App.js","index.js"],"names":["Currency","useState","symbols","setSymbols","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","amount","setAmount","finalResult","setFinalResult","getRate","a","console","log","url","fetch","then","response","ok","json","Error","responseJson","fixedRate","Object","values","catch","error","res","result","toFixed","useEffect","keys","document","getElementById","style","visibility","className","onChange","e","target","value","handleAmountChange","type","id","handleFromChange","map","i","handleTohange","onClick","convertClicked","useStyles","makeStyles","theme","root","flexGrow","title","App","classes","provider","firebase","auth","GoogleAuthProvider","user","setUser","onAuthStateChanged","uid","AppBar","position","Toolbar","Typography","variant","Button","color","signOut","err","signInWithPopup","credential","accessToken","errorCode","code","errorMessage","message","email","textAlign","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4d71e6c.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Currency.css'\r\n\r\nexport default function Currency() {\r\nconst[symbols,setSymbols] = useState([]);\r\n//Fixer.io\r\nconst API_KEY = '523225f3b6f3a36d254febef3778e1cb';\r\n\r\nconst [currencyFrom,setCurrencyFrom] = useState('ILS');\r\nconst [currencyTo,setCurrencyTo] = useState('EGP');\r\nconst [amount,setAmount] = useState(1);\r\nconst [finalResult,setFinalResult] = useState(null);\r\n\r\nuseEffect(()=>{\r\n        fetch(`http://data.fixer.io/api/symbols?access_key=${API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log('Got this result fron api in useEffect:');\r\n            console.log(result);\r\n            let keys = Object.keys(result.symbols);\r\n            setSymbols(keys);\r\n            console.log(symbols);\r\n          })\r\n        .catch((error) => {\r\n            console.log(`There was an error getting the symbols fron api in useEffect: ${error}`)\r\n          })\r\n},[])\r\n\r\nuseEffect(()=>{\r\n    if(finalResult !== null){\r\n        console.log('final result has changed, now its: '+ finalResult);\r\n        console.log(finalResult);\r\n        document.getElementById('resultdiv').style.visibility = \"visible\";\r\n    }\r\n},[finalResult])\r\n\r\nasync function getRate(){\r\n    console.log(`amount: ${amount}, from: ${currencyFrom}, to: ${currencyTo}`);\r\n    let url = `https://free.currconv.com/api/v7/convert?q=${currencyFrom}_${currencyTo}&compact=ultra&apiKey=776a17a7a3ab767ee87f`;\r\n\r\n    console.log(url);\r\n\r\n    const res = await fetch(url).then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong');\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n            let fixedRate = Object.values(responseJson);\r\n            fixedRate = fixedRate[0];\r\n            console.log('fixed rate someone? ' + fixedRate);\r\n            return fixedRate;            \r\n      })\r\n       .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n      return(res);\r\n}\r\n\r\n\r\n    async function convertClicked() {\r\n        console.log('calling');\r\n        const result = await getRate();\r\n        console.log(result);\r\n        setFinalResult((result*amount).toFixed(3));\r\n      }\r\n\r\n    const handleAmountChange=(e)=>{\r\n        setAmount(e.target.value);\r\n        document.getElementById('resultdiv').style.visibility = \"hidden\";\r\n    }\r\n\r\n    const handleFromChange=(e)=>{\r\n        setCurrencyFrom(e.target.value);\r\n        document.getElementById('resultdiv').style.visibility = \"hidden\";\r\n    }\r\n\r\n    const handleTohange=(e)=>{\r\n        setCurrencyTo(e.target.value);\r\n        document.getElementById('resultdiv').style.visibility = \"hidden\";\r\n    }\r\n\r\n    return (\r\n        <div className='currencyComponent'>\r\n            <h1>Currency Converter</h1>\r\n\r\n            <div className='container'>\r\n                 {/* amount */}\r\n                 <p>Amount</p>\r\n                <input onChange={(e)=>{handleAmountChange(e)}} type='number' id='amount-one' value={amount}></input>\r\n\r\n                <p>From</p>\r\n                <div className='currency'>\r\n                        {/* currency from */}\r\n                        <select onChange={(e)=>{handleFromChange(e)}} value={currencyFrom} id='correncyFrom'>\r\n                            {symbols.map((e,i)=>\r\n                                <option key={e} >{e}</option>\r\n                            )}\r\n                        </select>\r\n                </div>\r\n\r\n                <p>To</p>\r\n                <div className='currency'>\r\n                        {/* currency to */}\r\n                        <select onChange={(e)=>{handleTohange(e)}} value={currencyTo} id='correncyTo'>\r\n                            {symbols.map((e,i)=>\r\n                                <option key={e} >{e}</option>\r\n                            )}\r\n                        </select>\r\n                </div>\r\n\r\n                \r\n                <button onClick={()=>{convertClicked()}}>Convert</button>\r\n                {/* <button>Save</button> */}\r\n\r\n                              \r\n                <div id='resultdiv'>\r\n                    {amount} {currencyFrom} = {finalResult} {currencyTo}\r\n                </div>\r\n\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\n\nimport Currency from './Components/Currency';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  var provider = new firebase.auth.GoogleAuthProvider();\n\n  const [user,setUser] = useState(null);\n\n\n  useEffect(()=>{\n    //Firebase Auth State Observer\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        var uid = user.uid;\n        console.log(`user has signed in with user id: ${uid}`);\n        setUser(uid);\n      } else {\n        // User is signed out\n        console.log('user is not signed in');\n        setUser(null);\n      }\n    });\n\n  },[])\n\n  function signInWithGooglePopUp(){\n    firebase.auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential;\n  \n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      console.log('user has signed in successfuly');\n    }).catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      console.log(`error accured during sign in: ${errorCode}, ${errorMessage}, ${email}, ${credential}`);\n    });\n  };\n\n  const showComponent=()=>{\n        if (user) {\n          // User is signed in.\n          return(<Currency/>)\n        } else {\n          // No user is signed in.\n          return(<h3 style={{textAlign:'center'}}>Please sign in with your google account</h3>)\n        }\n    \n  }\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n         \n          <Typography variant=\"h6\" className={classes.title}>\n            Or Arbel\n          </Typography>\n          {user? (\n          \n            <Button color=\"inherit\" onClick={()=>{\n              firebase.auth().signOut()\n              .then(()=>{\n                console.log('user has signed out seccessfully');\n              })\n              .catch((err)=>{\n                console.log(`error signing out: ${err}`);\n              })\n            }}>Sign Out</Button>\n          ) : (\n            <Button color=\"inherit\" onClick={()=>{signInWithGooglePopUp()}}>Sign In with Google</Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    \n      {showComponent()}\n    </div>\n    \n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//Material UI\nimport '@fontsource/roboto';\n\n//firebase\nimport firebase from \"firebase/compat/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyASnE6ma5bDVcUBiYJCcw8kUXtqW1MVsXc\",\n  authDomain: \"authentication-purple.firebaseapp.com\",\n  projectId: \"authentication-purple\",\n  storageBucket: \"authentication-purple.appspot.com\",\n  messagingSenderId: \"998079665490\",\n  appId: \"1:998079665490:web:8aca58b05c4900b2fb168b\",\n  measurementId: \"G-YXNGLNZYPZ\"\n};\n\n// Initialize Firebase\nif(!firebase.apps[0]){\nfirebase.initializeApp(firebaseConfig);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}